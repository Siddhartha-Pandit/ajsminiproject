{"ast":null,"code":"var _jsxFileName = \"E:\\\\ajsminiproject\\\\notepad\\\\src\\\\components\\\\NoteList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport useFetch from \"../useFetch\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeNote } from \"../features/noteSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteList() {\n  _s();\n  const [bdata, setBdata] = useState(null);\n  const apiUrl = process.env.REACT_APP_API_URL;\n  const notes = useSelector(state => state.notes);\n  console.log(\"This is from the notelist\", notes);\n  const dispatch = useDispatch();\n  const data = notes;\n  useEffect(() => {\n    // const handleDarkLightToggle = () => {\n    //   document.body.classList.add(\"toggle\");\n    //   setTimeout(() => {\n    //     document.body.classList.toggle(\"light\");\n    //     setTimeout(() => document.body.classList.remove(\"toggle\"), 10);\n    //   }, 5);\n    // };\n\n    const handleDarkLightToggle = () => {\n      document.body.classList.add(\"toggle\");\n      setTimeout(() => {\n        document.body.classList.toggle(\"light\");\n        setTimeout(() => document.body.classList.remove(\"toggle\"), 10);\n      }, 5);\n    };\n    const inputElement = document.querySelector(\".day-night input\");\n    if (inputElement) {\n      inputElement.addEventListener(\"change\", handleDarkLightToggle);\n    }\n    return () => {\n      if (inputElement) {\n        inputElement.removeEventListener(\"change\", handleDarkLightToggle);\n      }\n    };\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  useEffect(() => {\n    //   data.map((note) => (\n    //     <div className=\"card\" key={note.id}>\n    //       <h4>{note.title}</h4>\n    //       <p>\n    //         {note.content.substring(0, 200)}{\" \"}\n    //         {note.content.length > 200 && \"...\"}{\" \"}\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/editor`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), data && data.map(note => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/editor/${note.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [note.content.substring(0, 200), \" \", note.content.length > 200 && \"...\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, note.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteList, \"GP4R3rf6QovbucgqGGbR9Dnw2m0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","useEffect","useState","useFetch","Link","useDispatch","useSelector","removeNote","jsxDEV","_jsxDEV","NoteList","_s","bdata","setBdata","apiUrl","process","env","REACT_APP_API_URL","notes","state","console","log","dispatch","data","handleDarkLightToggle","document","body","classList","add","setTimeout","toggle","remove","inputElement","querySelector","addEventListener","removeEventListener","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","map","note","id","title","content","substring","length","_c","$RefreshReg$"],"sources":["E:/ajsminiproject/notepad/src/components/NoteList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport useFetch from \"../useFetch\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeNote } from \"../features/noteSlice\";\r\n\r\nexport default function NoteList() {\r\n  const [bdata, setBdata] = useState(null);\r\n  const apiUrl = process.env.REACT_APP_API_URL;\r\n  const notes = useSelector((state) => state.notes);\r\n  console.log(\"This is from the notelist\", notes);\r\n  const dispatch = useDispatch();\r\n  const data = notes;\r\n\r\n  useEffect(() => {\r\n    // const handleDarkLightToggle = () => {\r\n    //   document.body.classList.add(\"toggle\");\r\n    //   setTimeout(() => {\r\n    //     document.body.classList.toggle(\"light\");\r\n    //     setTimeout(() => document.body.classList.remove(\"toggle\"), 10);\r\n    //   }, 5);\r\n    // };\r\n\r\n    const handleDarkLightToggle = () => {\r\n      document.body.classList.add(\"toggle\");\r\n      setTimeout(() => {\r\n        document.body.classList.toggle(\"light\");\r\n        setTimeout(() => document.body.classList.remove(\"toggle\"), 10);\r\n      }, 5);\r\n    };\r\n\r\n    const inputElement = document.querySelector(\".day-night input\");\r\n    if (inputElement) {\r\n      inputElement.addEventListener(\"change\", handleDarkLightToggle);\r\n    }\r\n\r\n    return () => {\r\n      if (inputElement) {\r\n        inputElement.removeEventListener(\"change\", handleDarkLightToggle);\r\n      }\r\n    };\r\n  }, []); // Empty dependency array ensures this effect runs only once\r\n\r\n  useEffect(() => {\r\n    //   data.map((note) => (\r\n    //     <div className=\"card\" key={note.id}>\r\n    //       <h4>{note.title}</h4>\r\n    //       <p>\r\n    //         {note.content.substring(0, 200)}{\" \"}\r\n    //         {note.content.length > 200 && \"...\"}{\" \"}\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <Link to={`/editor`}>\r\n          <div className=\"card\">\r\n            <h3>Add</h3>\r\n          </div>\r\n        </Link>\r\n        {/* Check if data is available before mapping */}\r\n        {data &&\r\n          data.map((note) => (\r\n            <Link key={note.id} to={`/editor/${note.id}`}>\r\n              <div className=\"card\" key={note.id}>\r\n                <h4>{note.title}</h4>\r\n                <p>\r\n                  {note.content.substring(0, 200)}{\" \"}\r\n                  {note.content.length > 200 && \"...\"}{\" \"}\r\n                </p>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}