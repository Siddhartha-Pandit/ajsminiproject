{"ast":null,"code":"var _jsxFileName = \"E:\\\\ajsminiproject\\\\notepad\\\\src\\\\components\\\\Editor.jsx\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n\n// const Editor = () => {\n//   const [fontNameOptions, setFontNameOptions] = useState([]);\n//   const [fontSizeOptions, setFontSizeOptions] = useState([]);\n//   let optionsButtons = document.querySelectorAll(\".option-button\");\n//   let advancedOptionButton = document.querySelectorAll(\".adv-option-button\");\n//   let fontName = document.getElementById(\"fontName\");\n//   let fontSizeRef = document.getElementById(\"fontSize\");\n//   let writingArea = document.getElementById(\"text-input\");\n//   let linkButton = document.getElementById(\"createLink\");\n//   let alignButtons = document.querySelectorAll(\".align\");\n//   let spacingButtons = document.querySelectorAll(\".spacing\");\n//   let formatButtons = document.querySelectorAll(\".format\");\n//   let scriptButtons = document.querySelectorAll(\".script\");\n//   //List of fontlist\n\n//   useEffect(() => {\n//     const fontList = [\n//       \"Arial\",\n//       \"Verdana\",\n//       \"Times New Roman\",\n//       \"Garamond\",\n//       \"Georgia\",\n//       \"Courier New\",\n//       \"cursive\",\n//     ];\n//     setFontNameOptions(\n//       fontList.map((value, index) => {\n//         <option key={index} value={value}>\n//           {value}\n//         </option>;\n//       })\n//     );\n//     const sizeOptions = [];\n//     for (let i = 1; i <= 7; i++) {\n//       sizeOptions.push(\n//         <option key={i} value={i}>\n//           {i}\n//         </option>\n//       );\n//     }\n//   });\n\n//   //Initial Settings\n//   const initializer = () => {\n//     //function calls for highlighting buttons\n//     //No highlights for link, unlink,lists, undo,redo since they are one time operations\n//     highlighter(alignButtons, true);\n//     highlighter(spacingButtons, true);\n//     highlighter(formatButtons, false);\n//     highlighter(scriptButtons, true);\n//     //create options for font names\n//     // fontList.map((value) => {\n//     //   let option = document.createElement(\"option\");\n//     //   option.value = value;\n//     //   option.innerHTML = value;\n//     //   fontName.appendChild(option);\n//     // });\n\n//     //fontSize allows only till 7\n//     for (let i = 1; i <= 7; i++) {\n//       let option = document.createElement(\"option\");\n//       option.value = i;\n//       option.innerHTML = i;\n//       fontSizeRef.appendChild(option);\n//     }\n//     //default size\n//     fontSizeRef.value = 3;\n//   };\n//   //main logic\n//   const handleButtonClick = (command) => {\n//     //execCommand executes command on selected text\n//     document.execCommand(command, false, null);\n//   };\n//   const handleAdvancedOptionChange = (command, value) => {\n//     document.execCommand(command, false, value);\n//   };\n//   //   //For basic operations which don't need value parameter\n//   //   optionsButtons.forEach((button) => {\n//   //     button.addEventListener(\"click\", () => {\n//   //       modifyText(button.id, false, null);\n//   //     });\n//   //   });\n//   //options that require value parameter (e.g colors, fonts)\n//   //   advancedOptionButton.forEach((button) => {\n//   //     button.addEventListener(\"change\", () => {\n//   //       modifyText(button.id, false, button.value);\n//   //     });\n//   //   });\n//   //link\n//   //   linkButton.addEventListener(\"click\", () => {\n//   //     let userLink = prompt(\"Enter a URL\");\n//   //     //if link has http then pass directly else add https\n//   //     if (/http/i.test(userLink)) {\n//   //       modifyText(linkButton.id, false, userLink);\n//   //     } else {\n//   //       userLink = \"http://\" + userLink;\n//   //       modifyText(linkButton.id, false, userLink);\n//   //     }\n//   //     window.open(userLink, \"_blank\");\n//   //   });\n//   const handleLinkButtonClick = () => {\n//     let userLink = prompt(\"Enter a URL\");\n//     if (userLink) {\n//       // Validate the URL using regular expression\n//       const urlPattern = /^(https?:\\/\\/)?([\\w-]+\\.)+[\\w-]+(\\/[\\w- .\\/?%&=]*)?$/;\n//       if (urlPattern.test(userLink)) {\n//         // URL is valid, create the link\n//         if (\n//           !userLink.startsWith(\"http://\") &&\n//           !userLink.startsWith(\"https://\")\n//         ) {\n//           userLink = \"http://\" + userLink;\n//         }\n//         document.execCommand(\"createLink\", false, userLink);\n//       } else {\n//         alert(\"Invalid URL\");\n//       }\n//     }\n//   };\n//   //Highlight clicked button\n//   const highlighter = (className, needsRemoval) => {\n//     className.forEach((button) => {\n//       button.addEventListener(\"click\", () => {\n//         //needsRemoval = true means only one button should be highlight and other would be normal\n//         if (needsRemoval) {\n//           let alreadyActive = false;\n//           //If currently clicked button is already active\n//           if (button.classList.contains(\"active\")) {\n//             alreadyActive = true;\n//           }\n//           //Remove highlight from other buttons\n//           highlighterRemover(className);\n//           if (!alreadyActive) {\n//             //highlight clicked button\n//             button.classList.add(\"active\");\n//           }\n//         } else {\n//           //if other buttons can be highlighted\n//           button.classList.toggle(\"active\");\n//         }\n//       });\n//     });\n//   };\n//   const highlighterRemover = (className) => {\n//     className.forEach((button) => {\n//       button.classList.remove(\"active\");\n//     });\n//   };\n//   window.onload = initializer();\n\n//   return (\n//     <>\n//       <div>\n//         <div className=\"container\">\n//           <div className=\"options\">\n//             <button\n//               id=\"bold\"\n//               className=\"option-button format\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-bold\"></i>\n//             </button>\n//             <button\n//               id=\"italic\"\n//               className=\"option-button format\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-italic\"></i>\n//             </button>\n//             <button\n//               id=\"underline\"\n//               className=\"option-button format\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-underline\"></i>\n//             </button>\n//             <button\n//               id=\"strikeout\"\n//               className=\"option-button format\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-strikethrough\"></i>\n//             </button>\n//             <button\n//               id=\"superscript\"\n//               className=\"option-button format\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-superscript\"></i>\n//             </button>\n//             <button\n//               id=\"subscript\"\n//               className=\"option-button format\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-subscript\"></i>\n//             </button>\n//             <button\n//               id=\"insertOrderedList\"\n//               className=\"option-button\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-list-ol\"></i>\n//             </button>\n//             <button\n//               id=\"insertUnorderedList\"\n//               className=\"option-button\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-list\"></i>\n//             </button>\n//             <button\n//               id=\"undo\"\n//               className=\"option-button\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-rotate-left\"></i>\n//             </button>\n//             <button\n//               id=\"redo\"\n//               className=\"option-button\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-rotate-right\"></i>\n//             </button>\n//             <button\n//               id=\"createLink\"\n//               className=\"option-button\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa fa-link\"></i>\n//             </button>\n//             <button\n//               id=\"unlink\"\n//               className=\"option-button\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa fa-unlink\"></i>\n//             </button>\n\n//             <button\n//               id=\"justifyLeft\"\n//               className=\"option-button align\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-align-left\"></i>\n//             </button>\n\n//             <button\n//               id=\"justifyCenter\"\n//               className=\"option-button align\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-align-center\"></i>\n//             </button>\n//             <button\n//               id=\"justifyRight\"\n//               className=\"option-button align\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-align-right\"></i>\n//             </button>\n//             <button\n//               id=\"justifyFull\"\n//               className=\"option-button align\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-align-justify\"></i>\n//             </button>\n//             <button\n//               id=\"indent\"\n//               className=\"option-button spacing\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-indent\"></i>\n//             </button>\n//             <button\n//               id=\"outdent\"\n//               className=\"option-button spacing\"\n//               onClick={() => handleButtonClick(\"bold\")}\n//             >\n//               <i className=\"fa-solid fa-outdent\"></i>\n//             </button>\n\n//             <select\n//               id=\"fromatBlock\"\n//               className=\"adv-option-button\"\n//               onChange={(e) =>\n//                 handleAdvancedOptionChange(\"fontName\", e.target.value)\n//               }\n//             >\n//               <option value=\"H1\">H1</option>\n//               <option value=\"H2\">H2</option>\n//               <option value=\"H3\">H3</option>\n//               <option value=\"H4\">H4</option>\n//               <option value=\"H5\">H5</option>\n//               <option value=\"H6\">H6</option>\n//             </select>\n\n//             <select\n//               id=\"fontName\"\n//               className=\"adv-option-button\"\n//               onChange={(e) =>\n//                 handleAdvancedOptionChange(\"fontName\", e.target.value)\n//               }\n//             ></select>\n//             <select\n//               id=\"fontSize\"\n//               className=\"adv-option-button\"\n//               onChange={(e) =>\n//                 handleAdvancedOptionChange(\"fontName\", e.target.value)\n//               }\n//             ></select>\n\n//             <div className=\"input-wrapper\">\n//               <input\n//                 type=\"color\"\n//                 id=\"foreColor\"\n//                 className=\"adv-option-button\"\n//                 onChange={(e) =>\n//                   handleAdvancedOptionChange(\"fontName\", e.target.value)\n//                 }\n//               />\n//               <label htmlFor=\"foreColor\">Font Color</label>\n//             </div>\n\n//             <div className=\"input-wrapper\">\n//               <input\n//                 type=\"color\"\n//                 id=\"backColor\"\n//                 className=\"adv-option-button\"\n//                 onChange={(e) =>\n//                   handleAdvancedOptionChange(\"fontName\", e.target.value)\n//                 }\n//               />\n//               <label htmlFor=\"backColor\">Highlight Color</label>\n//             </div>\n//           </div>\n//           <div id=\"text-input\" contentEditable=\"true\"></div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Editor;\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = () => {\n  _s();\n  const [fontNameOptions, setFontNameOptions] = useState([]);\n  const [fontSizeOptions, setFontSizeOptions] = useState([]);\n  useEffect(() => {\n    // List of font names\n    const fontList = [\"Arial\", \"Verdana\", \"Times New Roman\", \"Garamond\", \"Georgia\", \"Courier New\", \"cursive\"];\n\n    // Set font name options\n    setFontNameOptions(fontList.map((value, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: value,\n      children: value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this)));\n\n    // Set font size options\n    const sizeOptions = [];\n    for (let i = 1; i <= 7; i++) {\n      sizeOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this));\n    }\n    setFontSizeOptions(sizeOptions);\n  }, []);\n  const handleButtonClick = command => {\n    document.execCommand(command, false, null);\n  };\n  const handleAdvancedOptionChange = (command, value) => {\n    document.execCommand(command, false, value);\n  };\n  const handleLinkButtonClick = () => {\n    let userLink = prompt(\"Enter a URL\");\n    if (userLink && (userLink.startsWith(\"http://\") || userLink.startsWith(\"https://\"))) {\n      document.execCommand(\"createLink\", false, userLink);\n    } else {\n      alert(\"Invalid URL\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(\"bold\"),\n          className: \"option-button format\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-bold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(\"italic\"),\n          className: \"option-button format\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-italic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"fontName\",\n          onChange: e => handleAdvancedOptionChange(\"fontName\", e.target.value),\n          className: \"adv-option-button\",\n          children: fontNameOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"fontSize\",\n          onChange: e => handleAdvancedOptionChange(\"fontSize\", e.target.value),\n          className: \"adv-option-button\",\n          children: fontSizeOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            id: \"foreColor\",\n            className: \"adv-option-button\",\n            onChange: e => handleAdvancedOptionChange(\"foreColor\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"foreColor\",\n            children: \"Font Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            id: \"backColor\",\n            className: \"adv-option-button\",\n            onChange: e => handleAdvancedOptionChange(\"backColor\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"backColor\",\n            children: \"Highlight Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLinkButtonClick,\n          id: \"createLink\",\n          className: \"option-button\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"text-input\",\n        contentEditable: \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 5\n  }, this);\n};\n_s(Editor, \"Sz9s+Vduk4bTFjuVzS6GuCtXz5Y=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Editor","_s","fontNameOptions","setFontNameOptions","fontSizeOptions","setFontSizeOptions","fontList","map","value","index","children","fileName","_jsxFileName","lineNumber","columnNumber","sizeOptions","i","push","handleButtonClick","command","document","execCommand","handleAdvancedOptionChange","handleLinkButtonClick","userLink","prompt","startsWith","alert","className","onClick","id","onChange","e","target","type","htmlFor","contentEditable","_c","$RefreshReg$"],"sources":["E:/ajsminiproject/notepad/src/components/Editor.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\n// const Editor = () => {\r\n//   const [fontNameOptions, setFontNameOptions] = useState([]);\r\n//   const [fontSizeOptions, setFontSizeOptions] = useState([]);\r\n//   let optionsButtons = document.querySelectorAll(\".option-button\");\r\n//   let advancedOptionButton = document.querySelectorAll(\".adv-option-button\");\r\n//   let fontName = document.getElementById(\"fontName\");\r\n//   let fontSizeRef = document.getElementById(\"fontSize\");\r\n//   let writingArea = document.getElementById(\"text-input\");\r\n//   let linkButton = document.getElementById(\"createLink\");\r\n//   let alignButtons = document.querySelectorAll(\".align\");\r\n//   let spacingButtons = document.querySelectorAll(\".spacing\");\r\n//   let formatButtons = document.querySelectorAll(\".format\");\r\n//   let scriptButtons = document.querySelectorAll(\".script\");\r\n//   //List of fontlist\r\n\r\n//   useEffect(() => {\r\n//     const fontList = [\r\n//       \"Arial\",\r\n//       \"Verdana\",\r\n//       \"Times New Roman\",\r\n//       \"Garamond\",\r\n//       \"Georgia\",\r\n//       \"Courier New\",\r\n//       \"cursive\",\r\n//     ];\r\n//     setFontNameOptions(\r\n//       fontList.map((value, index) => {\r\n//         <option key={index} value={value}>\r\n//           {value}\r\n//         </option>;\r\n//       })\r\n//     );\r\n//     const sizeOptions = [];\r\n//     for (let i = 1; i <= 7; i++) {\r\n//       sizeOptions.push(\r\n//         <option key={i} value={i}>\r\n//           {i}\r\n//         </option>\r\n//       );\r\n//     }\r\n//   });\r\n\r\n//   //Initial Settings\r\n//   const initializer = () => {\r\n//     //function calls for highlighting buttons\r\n//     //No highlights for link, unlink,lists, undo,redo since they are one time operations\r\n//     highlighter(alignButtons, true);\r\n//     highlighter(spacingButtons, true);\r\n//     highlighter(formatButtons, false);\r\n//     highlighter(scriptButtons, true);\r\n//     //create options for font names\r\n//     // fontList.map((value) => {\r\n//     //   let option = document.createElement(\"option\");\r\n//     //   option.value = value;\r\n//     //   option.innerHTML = value;\r\n//     //   fontName.appendChild(option);\r\n//     // });\r\n\r\n//     //fontSize allows only till 7\r\n//     for (let i = 1; i <= 7; i++) {\r\n//       let option = document.createElement(\"option\");\r\n//       option.value = i;\r\n//       option.innerHTML = i;\r\n//       fontSizeRef.appendChild(option);\r\n//     }\r\n//     //default size\r\n//     fontSizeRef.value = 3;\r\n//   };\r\n//   //main logic\r\n//   const handleButtonClick = (command) => {\r\n//     //execCommand executes command on selected text\r\n//     document.execCommand(command, false, null);\r\n//   };\r\n//   const handleAdvancedOptionChange = (command, value) => {\r\n//     document.execCommand(command, false, value);\r\n//   };\r\n//   //   //For basic operations which don't need value parameter\r\n//   //   optionsButtons.forEach((button) => {\r\n//   //     button.addEventListener(\"click\", () => {\r\n//   //       modifyText(button.id, false, null);\r\n//   //     });\r\n//   //   });\r\n//   //options that require value parameter (e.g colors, fonts)\r\n//   //   advancedOptionButton.forEach((button) => {\r\n//   //     button.addEventListener(\"change\", () => {\r\n//   //       modifyText(button.id, false, button.value);\r\n//   //     });\r\n//   //   });\r\n//   //link\r\n//   //   linkButton.addEventListener(\"click\", () => {\r\n//   //     let userLink = prompt(\"Enter a URL\");\r\n//   //     //if link has http then pass directly else add https\r\n//   //     if (/http/i.test(userLink)) {\r\n//   //       modifyText(linkButton.id, false, userLink);\r\n//   //     } else {\r\n//   //       userLink = \"http://\" + userLink;\r\n//   //       modifyText(linkButton.id, false, userLink);\r\n//   //     }\r\n//   //     window.open(userLink, \"_blank\");\r\n//   //   });\r\n//   const handleLinkButtonClick = () => {\r\n//     let userLink = prompt(\"Enter a URL\");\r\n//     if (userLink) {\r\n//       // Validate the URL using regular expression\r\n//       const urlPattern = /^(https?:\\/\\/)?([\\w-]+\\.)+[\\w-]+(\\/[\\w- .\\/?%&=]*)?$/;\r\n//       if (urlPattern.test(userLink)) {\r\n//         // URL is valid, create the link\r\n//         if (\r\n//           !userLink.startsWith(\"http://\") &&\r\n//           !userLink.startsWith(\"https://\")\r\n//         ) {\r\n//           userLink = \"http://\" + userLink;\r\n//         }\r\n//         document.execCommand(\"createLink\", false, userLink);\r\n//       } else {\r\n//         alert(\"Invalid URL\");\r\n//       }\r\n//     }\r\n//   };\r\n//   //Highlight clicked button\r\n//   const highlighter = (className, needsRemoval) => {\r\n//     className.forEach((button) => {\r\n//       button.addEventListener(\"click\", () => {\r\n//         //needsRemoval = true means only one button should be highlight and other would be normal\r\n//         if (needsRemoval) {\r\n//           let alreadyActive = false;\r\n//           //If currently clicked button is already active\r\n//           if (button.classList.contains(\"active\")) {\r\n//             alreadyActive = true;\r\n//           }\r\n//           //Remove highlight from other buttons\r\n//           highlighterRemover(className);\r\n//           if (!alreadyActive) {\r\n//             //highlight clicked button\r\n//             button.classList.add(\"active\");\r\n//           }\r\n//         } else {\r\n//           //if other buttons can be highlighted\r\n//           button.classList.toggle(\"active\");\r\n//         }\r\n//       });\r\n//     });\r\n//   };\r\n//   const highlighterRemover = (className) => {\r\n//     className.forEach((button) => {\r\n//       button.classList.remove(\"active\");\r\n//     });\r\n//   };\r\n//   window.onload = initializer();\r\n\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <div className=\"container\">\r\n//           <div className=\"options\">\r\n//             <button\r\n//               id=\"bold\"\r\n//               className=\"option-button format\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-bold\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"italic\"\r\n//               className=\"option-button format\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-italic\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"underline\"\r\n//               className=\"option-button format\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-underline\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"strikeout\"\r\n//               className=\"option-button format\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-strikethrough\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"superscript\"\r\n//               className=\"option-button format\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-superscript\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"subscript\"\r\n//               className=\"option-button format\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-subscript\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"insertOrderedList\"\r\n//               className=\"option-button\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-list-ol\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"insertUnorderedList\"\r\n//               className=\"option-button\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-list\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"undo\"\r\n//               className=\"option-button\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-rotate-left\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"redo\"\r\n//               className=\"option-button\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-rotate-right\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"createLink\"\r\n//               className=\"option-button\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa fa-link\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"unlink\"\r\n//               className=\"option-button\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa fa-unlink\"></i>\r\n//             </button>\r\n\r\n//             <button\r\n//               id=\"justifyLeft\"\r\n//               className=\"option-button align\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-align-left\"></i>\r\n//             </button>\r\n\r\n//             <button\r\n//               id=\"justifyCenter\"\r\n//               className=\"option-button align\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-align-center\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"justifyRight\"\r\n//               className=\"option-button align\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-align-right\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"justifyFull\"\r\n//               className=\"option-button align\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-align-justify\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"indent\"\r\n//               className=\"option-button spacing\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-indent\"></i>\r\n//             </button>\r\n//             <button\r\n//               id=\"outdent\"\r\n//               className=\"option-button spacing\"\r\n//               onClick={() => handleButtonClick(\"bold\")}\r\n//             >\r\n//               <i className=\"fa-solid fa-outdent\"></i>\r\n//             </button>\r\n\r\n//             <select\r\n//               id=\"fromatBlock\"\r\n//               className=\"adv-option-button\"\r\n//               onChange={(e) =>\r\n//                 handleAdvancedOptionChange(\"fontName\", e.target.value)\r\n//               }\r\n//             >\r\n//               <option value=\"H1\">H1</option>\r\n//               <option value=\"H2\">H2</option>\r\n//               <option value=\"H3\">H3</option>\r\n//               <option value=\"H4\">H4</option>\r\n//               <option value=\"H5\">H5</option>\r\n//               <option value=\"H6\">H6</option>\r\n//             </select>\r\n\r\n//             <select\r\n//               id=\"fontName\"\r\n//               className=\"adv-option-button\"\r\n//               onChange={(e) =>\r\n//                 handleAdvancedOptionChange(\"fontName\", e.target.value)\r\n//               }\r\n//             ></select>\r\n//             <select\r\n//               id=\"fontSize\"\r\n//               className=\"adv-option-button\"\r\n//               onChange={(e) =>\r\n//                 handleAdvancedOptionChange(\"fontName\", e.target.value)\r\n//               }\r\n//             ></select>\r\n\r\n//             <div className=\"input-wrapper\">\r\n//               <input\r\n//                 type=\"color\"\r\n//                 id=\"foreColor\"\r\n//                 className=\"adv-option-button\"\r\n//                 onChange={(e) =>\r\n//                   handleAdvancedOptionChange(\"fontName\", e.target.value)\r\n//                 }\r\n//               />\r\n//               <label htmlFor=\"foreColor\">Font Color</label>\r\n//             </div>\r\n\r\n//             <div className=\"input-wrapper\">\r\n//               <input\r\n//                 type=\"color\"\r\n//                 id=\"backColor\"\r\n//                 className=\"adv-option-button\"\r\n//                 onChange={(e) =>\r\n//                   handleAdvancedOptionChange(\"fontName\", e.target.value)\r\n//                 }\r\n//               />\r\n//               <label htmlFor=\"backColor\">Highlight Color</label>\r\n//             </div>\r\n//           </div>\r\n//           <div id=\"text-input\" contentEditable=\"true\"></div>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Editor;\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Editor = () => {\r\n  const [fontNameOptions, setFontNameOptions] = useState([]);\r\n  const [fontSizeOptions, setFontSizeOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // List of font names\r\n    const fontList = [\r\n      \"Arial\",\r\n      \"Verdana\",\r\n      \"Times New Roman\",\r\n      \"Garamond\",\r\n      \"Georgia\",\r\n      \"Courier New\",\r\n      \"cursive\",\r\n    ];\r\n\r\n    // Set font name options\r\n    setFontNameOptions(\r\n      fontList.map((value, index) => (\r\n        <option key={index} value={value}>\r\n          {value}\r\n        </option>\r\n      ))\r\n    );\r\n\r\n    // Set font size options\r\n    const sizeOptions = [];\r\n    for (let i = 1; i <= 7; i++) {\r\n      sizeOptions.push(\r\n        <option key={i} value={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    setFontSizeOptions(sizeOptions);\r\n  }, []);\r\n\r\n  const handleButtonClick = (command) => {\r\n    document.execCommand(command, false, null);\r\n  };\r\n\r\n  const handleAdvancedOptionChange = (command, value) => {\r\n    document.execCommand(command, false, value);\r\n  };\r\n\r\n  const handleLinkButtonClick = () => {\r\n    let userLink = prompt(\"Enter a URL\");\r\n    if (\r\n      userLink &&\r\n      (userLink.startsWith(\"http://\") || userLink.startsWith(\"https://\"))\r\n    ) {\r\n      document.execCommand(\"createLink\", false, userLink);\r\n    } else {\r\n      alert(\"Invalid URL\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"options\">\r\n          <button\r\n            onClick={() => handleButtonClick(\"bold\")}\r\n            className=\"option-button format\"\r\n          >\r\n            <i className=\"fa-solid fa-bold\"></i>\r\n          </button>\r\n          <button\r\n            onClick={() => handleButtonClick(\"italic\")}\r\n            className=\"option-button format\"\r\n          >\r\n            <i className=\"fa-solid fa-italic\"></i>\r\n          </button>\r\n          {/* Add other buttons with their respective onClick handlers */}\r\n\r\n          <select\r\n            id=\"fontName\"\r\n            onChange={(e) =>\r\n              handleAdvancedOptionChange(\"fontName\", e.target.value)\r\n            }\r\n            className=\"adv-option-button\"\r\n          >\r\n            {fontNameOptions}\r\n          </select>\r\n\r\n          <select\r\n            id=\"fontSize\"\r\n            onChange={(e) =>\r\n              handleAdvancedOptionChange(\"fontSize\", e.target.value)\r\n            }\r\n            className=\"adv-option-button\"\r\n          >\r\n            {fontSizeOptions}\r\n          </select>\r\n\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              type=\"color\"\r\n              id=\"foreColor\"\r\n              className=\"adv-option-button\"\r\n              onChange={(e) =>\r\n                handleAdvancedOptionChange(\"foreColor\", e.target.value)\r\n              }\r\n            />\r\n            <label htmlFor=\"foreColor\">Font Color</label>\r\n          </div>\r\n\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              type=\"color\"\r\n              id=\"backColor\"\r\n              className=\"adv-option-button\"\r\n              onChange={(e) =>\r\n                handleAdvancedOptionChange(\"backColor\", e.target.value)\r\n              }\r\n            />\r\n            <label htmlFor=\"backColor\">Highlight Color</label>\r\n          </div>\r\n\r\n          <button\r\n            onClick={handleLinkButtonClick}\r\n            id=\"createLink\"\r\n            className=\"option-button\"\r\n          >\r\n            <i className=\"fa fa-link\"></i>\r\n          </button>\r\n\r\n          {/* Add other buttons and select elements */}\r\n        </div>\r\n        <div id=\"text-input\" contentEditable=\"true\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}